#!/bin/bash
#
# CloudVPN Control
#
# This program is a free software: You can redistribute and/or modify it
# under the terms of GNU GPLv3 license, or any later version of the license.
# The program is distributed in a good hope it will be useful, but without
# any warranty - see the aforementioned license for more details.
# You should have received a copy of the license along with this program;
# if not, see <http://www.gnu.org/licenses/>.
#

CLOUDVPN=/usr/bin/cloudvpn
CONFDIR=/etc/cloudvpn.d/
LOGDIR=/var/log/cloudvpn/
PIDDIR=/var/run/cloudvpn/

function die {
	echo $@
	exit 1
}

THIS="$0"

if [ ! "$2" ] ; then cat <<EOF
CloudVPN control script. Manage running CloudVPN daemons.

usage:
  $0 <start|restart|stop|zap|status> <daemon-name>

settings:
config directory = $CONFDIR (*.cfg) - modify
log directory = $LOGDIR (*.log) - see this
pid directory = $PIDDIR (*.pid) - don't touch it
EOF
die "not enough arguments"
fi

function inner_start {
	"$CLOUDVPN" -@include "$CONFDIR/$1.cfg" 2>&1 >> "$LOGDIR/$1.log" &
	echo $! > "$PIDDIR/$1.pid"
}

function do_start {
	echo "starting $1"
	[ -f "$PIDDIR/$1.pid" ] && die "already running"
	[ -f "$CONFDIR/$1.cfg" ] || die "config file not found"
	setsid "$THIS" inner_start $1 &
}

function do_stop {
	pidfile="$PIDDIR/$1.pid"
	[ -f "$pidfile" ] || exit 1
	pid=`cat "$pidfile"`
	echo "killing $1 (pid $pid)"
	kill $pid || die "can't kill"
	rm "$PIDDIR/$1.pid" || die "can't remove pid file"
}

function do_restart {
	do_stop "$1"
	do_start "$1"
}

function do_zap {
	rm "$PIDDIR/$1.pid"
}

function do_status {
	if [ -f "$PIDDIR/$1.pid" ] ; then
		echo "$1 running"
	else
		echo "$1 stopped"
	fi
}

test -f "$CLOUDVPN" || die "not a file: $CLOUDVPN"
test -x "$CLOUDVPN" || die "not executable: $CLOUDVPN"

test -d "$LOGDIR" || mkdir -p "$LOGDIR" || die "cannot access $LOGDIR"
test -d "$PIDDIR" || mkdir -p "$PIDDIR" || die "cannot access $PIDDIR"

case "$1" in
start|stop|restart|zap|status) do_$1 $2 ;;
inner_start) inner_start $2;;
*) die "invalid operation: $1"
esac

